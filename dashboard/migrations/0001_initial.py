# Generated by Django 3.2.4 on 2021-11-20 05:36

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_superadmin', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_operationers', models.BooleanField(default=False)),
                ('is_customer', models.BooleanField(default=False)),
                ('is_guest', models.BooleanField(default=False, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bannerTitle', models.CharField(max_length=100, null=True)),
                ('bannerImage', models.ImageField(upload_to='Product')),
            ],
        ),
        migrations.CreateModel(
            name='Best_Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.FileField(blank=True, null=True, upload_to='bestoffer')),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50, null=True)),
                ('desc', models.TextField(null=True)),
                ('name', models.CharField(max_length=20, null=True)),
                ('image', models.ImageField(upload_to='Product')),
                ('date', models.DateField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('image', models.ImageField(default=False, upload_to='Product')),
                ('catDesc', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CouponGlobaladd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(blank=True, max_length=100, null=True)),
                ('discount_percent', models.IntegerField(blank=True, null=True)),
                ('coupon_applied_type', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GroupedProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid1', models.IntegerField(blank=True, null=True)),
                ('pid2', models.IntegerField(blank=True, null=True)),
                ('product_type', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('final_price', models.FloatField(blank=True, null=True)),
                ('volume_type', models.CharField(blank=True, max_length=30, null=True)),
                ('packing_charge', models.IntegerField(blank=True, null=True)),
                ('unit_weight', models.FloatField(blank=True, null=True)),
                ('product_margin', models.FloatField(blank=True, null=True)),
                ('gst', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GsmType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.category')),
            ],
        ),
        migrations.CreateModel(
            name='Gstglobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gst', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HappyClients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('review', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVolumeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('volumetype', models.CharField(blank=True, max_length=50, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.category')),
            ],
        ),
        migrations.CreateModel(
            name='ShipingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50, null=True)),
                ('price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ShippingExpressGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shiping_city', models.CharField(blank=True, max_length=200, null=True)),
                ('shiping_weight', models.FloatField(blank=True, null=True)),
                ('shiping_charges', models.FloatField(blank=True, null=True)),
                ('air_rate', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingPlusGlobal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shiping_city', models.CharField(blank=True, max_length=200, null=True)),
                ('shiping_weight', models.FloatField(blank=True, null=True)),
                ('shiping_price', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.TextField(blank=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.category')),
            ],
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=150)),
                ('image', models.ImageField(default=False, upload_to='Product')),
                ('desc', models.TextField(null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.category')),
            ],
        ),
        migrations.CreateModel(
            name='testonomial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, null=True)),
                ('email', models.CharField(max_length=30, null=True)),
                ('phone', models.CharField(max_length=15, null=True)),
                ('desc', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='variableImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='variableproducts')),
            ],
        ),
        migrations.CreateModel(
            name='VariableProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('product_type', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(max_length=100, null=True, unique=True)),
                ('desc', models.TextField(null=True)),
                ('inventory', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('added_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dashboard.user')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('added_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dashboard.user')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('added_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dashboard.user')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Operation',
            fields=[
                ('added_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dashboard.user')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Signup',
            fields=[
                ('added_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='dashboard.user')),
                ('name', models.CharField(max_length=200, null=True)),
                ('email', models.CharField(max_length=200)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('password', models.CharField(max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VariableProductAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('unit_Cost_price', models.FloatField(blank=True, null=True)),
                ('packing_charge', models.IntegerField(blank=True, null=True)),
                ('unit_weight', models.FloatField(blank=True, null=True)),
                ('product_margin', models.FloatField(blank=True, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('gsm_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.gsmtype')),
                ('gst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.gstglobal')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableimage')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.sizes')),
                ('volume_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.productvolumetype')),
            ],
        ),
        migrations.AddField(
            model_name='variableimage',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct'),
        ),
        migrations.CreateModel(
            name='vargrp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueid', models.CharField(blank=True, max_length=20, null=True)),
                ('variable', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproductattributes')),
            ],
        ),
        migrations.CreateModel(
            name='TrendingProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='SimpleProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_type', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('color', models.CharField(blank=True, max_length=200, null=True)),
                ('slug', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('final_Price', models.FloatField(blank=True, null=True)),
                ('unit_price', models.FloatField(blank=True, null=True)),
                ('margin', models.FloatField(blank=True, null=True)),
                ('packing_charges', models.IntegerField(blank=True, null=True)),
                ('unit_Weight', models.IntegerField(blank=True, null=True)),
                ('inventory', models.IntegerField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('gst', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.gstglobal')),
                ('product_gsm_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.gsmtype')),
                ('product_vol_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.productvolumetype')),
                ('size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.sizes')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.subcategory')),
            ],
        ),
        migrations.CreateModel(
            name='simpleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.FileField(blank=True, null=True, upload_to='Product')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
            ],
        ),
        migrations.CreateModel(
            name='simpleAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleimage')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
            ],
        ),
        migrations.CreateModel(
            name='simpgrp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uniqueid', models.CharField(blank=True, max_length=20, null=True)),
                ('simple', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Shopbycategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.category')),
            ],
        ),
        migrations.CreateModel(
            name='Shiping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination', models.CharField(max_length=50, null=True)),
                ('product_weight_upto250gms', models.IntegerField()),
                ('product_weight_upto500gms', models.IntegerField()),
                ('product_weight_add500gm', models.IntegerField()),
                ('product_weight_serviceRate_3kg_to_50kg', models.IntegerField()),
                ('product_weight_AirRate_2kg_to_50kg', models.IntegerField()),
                ('shipCat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.shipingcategory')),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=25, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=25, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Productquantity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='Product')),
                ('video', models.FileField(upload_to='Product')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(max_length=25, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='NewlaunchesVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproductattributes')),
            ],
        ),
        migrations.CreateModel(
            name='NewlaunchesSimple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
            ],
        ),
        migrations.CreateModel(
            name='NewlaunchesGrouped',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.groupedproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Cupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, null=True)),
                ('discount', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=100, null=True, unique=True)),
                ('title', models.CharField(max_length=50, null=True)),
                ('desc', models.TextField(null=True)),
                ('name', models.CharField(max_length=20, null=True)),
                ('image', models.ImageField(upload_to='Product')),
                ('date', models.DateField(auto_now_add=True, null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.blogcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Best_Sellers_variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproductattributes')),
            ],
        ),
        migrations.CreateModel(
            name='Best_Sellers_simple',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('simple_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
            ],
        ),
        migrations.CreateModel(
            name='Best_Sellers_grouped',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.groupedproduct')),
            ],
        ),
        migrations.CreateModel(
            name='AllProdcuts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grouped_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.groupedproduct')),
                ('simple_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.simpleproduct')),
                ('variable_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.variableproductattributes')),
            ],
        ),
    ]
